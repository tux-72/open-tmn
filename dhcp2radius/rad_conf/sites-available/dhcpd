######################################################################

#
#  The DHCP functionality goes into a virtual server.
#

server dhcp {

#  Define a DHCP socket.
#
#  The default port below is 6700, so you don't break your network.
#  If you want it to do real DHCP, change this to 67, and good luck!
#
#  You can also bind the DHCP socket to an interface.
#  See below, and raddb/radiusd.conf for examples.
#
#  This lets you run *one* DHCP server instance and have it listen on
#  multiple interfaces, each with a separate policy.
#
#  If you have multiple interfaces, it is a good idea to bind the
#  listen section to an interface.  You will likely also need one
#  listen section per interface.

    listen {
	ipaddr = 192.168.100.20
	port = 67
	type = dhcp
	#interface = eth0
    }

############## DHCP Relay list #############
    client c4503 {
        ipaddr = 10.32.0.1
        netmask = 32
        dhcp = yes
    }

############################################

    dhcp DHCP-Discover {
        # Set server ID field (it MUST be in the reply packet)
        # Log the response
        linelog
        update reply {
		DHCP-Message-Type = DHCP-Offer
		#DHCP-DHCP-Server-Identifier = 192.168.100.20
		DHCP-DHCP-Server-Identifier = "%{Packet-Dst-IP-Address}"
		DHCP-Domain-Name-Server = 77.239.208.17
		DHCP-Domain-Name-Server = 77.239.208.10
		DHCP-NTP-Servers = 77.239.208.17
        }
        #Process the request
        perl
        #Update reponse if request succeeded
        if (ok) {
                # Address was found
                update reply {
                        DHCP-Message-Type = DHCP-Offer
                }
        }
        else {
                #In any other case - don't send anything:
                update reply {
                        DHCP-Message-Type = 0
                }
        }
        # Log the response
        linelog

        ok
    }

    dhcp DHCP-Request {
        # Set server ID field (it MUST be in the reply packet)
        # Log the response
        linelog
        update reply {
		DHCP-Message-Type = DHCP-Ack
		#DHCP-DHCP-Server-Identifier = 192.168.100.20
		DHCP-DHCP-Server-Identifier = "%{Packet-Dst-IP-Address}"
		DHCP-Domain-Name-Server = 77.239.208.17
		DHCP-Domain-Name-Server = 77.239.208.10
		DHCP-NTP-Servers = 77.239.208.17
        }
        #Process the request
        perl
        #Update reponse with all required information on success
        if (ok) {
                # Address was found
                update reply {
                        DHCP-Message-Type = DHCP-ACK
                }
        }
        elsif (notfound) {
                # Address was not found, send NAK response
                update reply {
                        DHCP-Message-Type = DHCP-NAK
                }
        }
        else {
                #In any other case - don't send anything:
                update reply {
                        DHCP-Message-Type = 0
                }
        }
        #Log the response
        linelog
        ok
    }

    dhcp DHCP-Release {
	#Log the request
	#Process the request
	perl
	linelog
	handled
    }

    dhcp DHCP-Inform {
        handled
    }
    #dhcp {
    #        handled
    #}

}
